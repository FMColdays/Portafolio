---
import { TAGS } from "../utilities/proyectos";
---

<ul>
  {
    Object.values(TAGS).map((habilidad) => (
      <li class="tecnologia" style={habilidad.clase}>
        <habilidad.Icono className="logo" width="5rem" height="5rem" />
        <h2>{habilidad.nombre}</h2>
      </li>
    ))
  }
</ul>
<div class="contenedor-btn">
  <button class="btn-minmax" id="toggleButton">Ver más</button>
</div>

<script>
  const $TECNOLOGIAS = document.querySelectorAll(".tecnologia");
  const $boton = document.getElementById("toggleButton");
  let pressBoton = false;

  window.addEventListener("resize", updateDisplay);

  let cantidad = 4;
  function updateDisplay() {
    $TECNOLOGIAS.forEach((tecnologia, index) => {
      const li = tecnologia as HTMLElement;
      if (window.innerWidth > 576 || pressBoton) {
        li.style.display = "";
      } else if (index >= cantidad) {
        li.style.display = "none";
      }
    });
  }

  updateDisplay();
  $boton.addEventListener("click", () => {
    cantidad = cantidad === 4 ? 9 : 4;
    pressBoton = !pressBoton;
    updateDisplay();
    $boton.textContent = cantidad === 9 ? "Ver menos" : "Ver más";
  });
</script>

<style>
  ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    grid-gap: 5rem 2rem;
    padding: 0;
  }

  h2 {
    z-index: 1;
  }

  .logo {
    position: absolute;
    opacity: 0.2;

    transform: scale(2);
    transition: transform 0.5s ease-in-out;
  }

  li:hover .logo {
    transform: rotate(35deg) scale(3);
  }

  li {
    --posicion: translateX(-200px);
    position: relative;
    width: 100%;
    min-height: 15rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    border-radius: 1rem;
    overflow: hidden;
    animation: mostrar linear forwards;
    animation-timeline: view();
    animation-range: entry 0% cover 30%;
    border: 1px solid rgb(255 255 255 / 0.14);
  }

  li:is(:nth-child(4), :nth-child(5), :nth-child(6)) {
    --posicion: translateX(200px);
  }

  @keyframes mostrar {
    from {
      transform: var(--posicion);
      opacity: 0;
    }
    to {
      transform: translateX(0px);
      opacity: 1;
    }
  }

  .contenedor-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    padding-block: 5rem;
  }

  .btn-minmax {
    all: unset;
    border: 1px solid rgb(15 198 15 / 0.6);
    padding: 1rem 3rem;
    border-radius: 1rem;
    display: block;
  }

  @media (min-width: 576px) {
    .btn-minmax {
      display: none;
    }
  }

  .btn-minmax:active {
    background-color: rgb(15 198 15 / 0.1);
  }
</style>
